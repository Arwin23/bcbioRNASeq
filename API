# API for bcbioRnaseq package

## Exported functions

alpha_summary(dds, alpha = c(0.1, 0.05, 0.01, 0.001, 1e-06), ...)
bcbio(object, ...)
bcbio.bcbioRnaDataSet(object, type = "counts")
bcbio<-(object, ..., value)
check_run(run)
downloads(file = NULL)
gene_level_annotations(run)
load_run(upload_dir = "final", analysis = "rnaseq", alpha = 0.05, lfc = 1, intgroup = "description", metadata_file = NULL, organism = NULL)
load_run_S4(upload_dir = "final", analysis = "rnaseq", intgroup = "description", metadata_file = NULL, organism = NULL, ...)
md_res_tables(res_tbl)
melt_log10(run, counts)
metadata_table(run)
plot_correlation_heatmap(run, dt, genes = NULL, intgroup = NULL, annotation = NULL, title = NULL, method = "pearson", clustering_method = "ward.D2", ...)
plot_count_density(run, normalized_counts)
plot_counts_per_gene(run, normalized_counts)
plot_deg_heatmap(run, dt, res, ...)
plot_exonic_mapping_rate(run, pass_limit = 60)
plot_gender_markers(run, normalized_counts)
plot_gene(run, normalized_counts, gene, format = "external_gene_name")
plot_gene_detection_saturation(run, raw_counts)
plot_gene_heatmap(run, dt, genes, intgroup = NULL, annotation = NULL, title = NULL, clustering_method = "ward.D2", cluster_rows = TRUE, cluster_cols = TRUE, scale = "row", ...)
plot_genes_detected(run, raw_counts, pass_limit = 20000)
plot_intronic_mapping_rate(run, warn_limit = 20)
plot_ma(res, ylim = 2)
plot_mapped_reads(run, pass_limit = 20, warn_limit = 10)
plot_mapping_rate(run, pass_limit = 90, warn_limit = 70)
plot_mean_sd(dds, rld = NULL, vsd = NULL)
plot_mirna_counts(run)
plot_pca(run, dt, genes = NULL, intgroup = NULL, shape = FALSE, label = TRUE)
plot_pca_covariates(run, dt, ...)
plot_rrna_mapping_rate(run, warn_limit = 10)
plot_size_distribution(run)
plot_srna_clusters(run)
plot_total_reads(run, pass_limit = 20, warn_limit = 10)
plot_volcano(run, res, lfc = 1, text_labels = 30, direction = "both", title = NULL, shade_color = "green", shade_alpha = 0.25, point_color = "gray", point_alpha = 0.75, point_outline_color = "darkgray")
pool_counts(counts, pattern = "_L\\d+")
pool_dds(dds, pattern = "_L\\d+", save = FALSE)
read_bcbio_counts(run, grep = NULL, samples = NULL)
res_tables(run, res, lfc = 0, write = TRUE, dir = "results/de", print = TRUE)
tmm_normalize(raw_counts)
top_tables(res_tbl, n = 50, coding = FALSE)
tpm(txi)
tx2gene(run)
txi(object, ...)
txi.bcbioRnaDataSet(object)
txi<-(object, ..., value)
write_counts(..., dir = file.path("results", "counts"))

## Exported data

.__C__bcbioRnaDataSet: classRepresentation (S4[1])
.__T__bcbio:bcbioRnaseq: environment (environment[1])
.__T__bcbio<-:bcbioRnaseq: environment (environment[1])
.__T__txi:bcbioRnaseq: environment (environment[1])
.__T__txi<-:bcbioRnaseq: environment (environment[1])
