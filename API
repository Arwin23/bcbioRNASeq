# API for bcbioRnaseq package

## Exported functions

alpha_summary(dds, alpha = c(0.1, 0.05, 0.01, 0.001, 1e-06))
bcbioRnaDataSetFromFolder(upload_dir = "final", analysis = "rnaseq", intgroup = "description", metadata_file = NULL, organism = NULL, read_counts = TRUE, ...)
check_dds(dds, stop = TRUE)
check_dt(dt, stop = TRUE)
check_res(res, stop = TRUE)
check_run(run)
create_new_project()
detect_hpc()
detect_organism(genome_build)
ensembl_annotations(run, attributes = NULL, filters = "ensembl_gene_id", values = NULL)
load_run(upload_dir = "final", analysis = "rnaseq", intgroup = "description", metadata_file = NULL, organism = NULL, read_counts = TRUE)
melt_log10(run, counts)
metadata_table(run)
plot_correlation_heatmap(run, dt, method = "pearson")
plot_count_density(run, normalized_counts)
plot_counts_per_gene(run, normalized_counts)
plot_deg_heatmap(run, dds, contrast, alpha = 0.1, lfc = 0)
plot_exonic_mapping_rate(run)
plot_gender_markers(run, normalized_counts)
plot_gene(run, normalized_counts, gene, format = "external_gene_name")
plot_gene_detection_saturation(run, raw_counts)
plot_genes_detected(run, raw_counts)
plot_intronic_mapping_rate(run)
plot_ma(res, ylim = 2)
plot_mapped_reads(run)
plot_mapping_rate(run)
plot_mirna_counts(run)
plot_pca(run, dt, label = TRUE)
plot_rrna_mapping_rate(run)
plot_size_distribution(run)
plot_total_reads(run)
plot_volcano(run, res, lfc = 1, text_labels = 30, direction = "both", title = NULL, shade_color = "green", shade_alpha = 0.25, point_color = "gray", point_alpha = 0.75, point_outline_color = "darkgray")
pool_lane_split_counts(raw_counts, lane_grep = "_L\\d+$")
pool_lane_split_dds(run, dds, save = TRUE)
read_bcbio_counts(run, grep = NULL, samples = NULL)
read_bcbio_file(run, file, row_names = NULL, ...)
read_bcbio_metadata(run)
read_bcbio_metrics(run)
read_bcbio_samples_yaml(run, keys)
read_data_raw()
read_metadata(file, pattern = NULL, pattern_col = "description", lanes = NULL)
read_yaml(yaml_file)
references(bibtex_file = "bcbioRnaseq.bib")
res_tables(run, res, lfc = 0)
tmm_normalize(raw_counts)
top_tables(res_tbl)
tpm(txi)
txi(object, ...)
txi.bcbioRnaDataSet(object)
txi<-(object, ..., value)
write_counts(..., dir = file.path("results", "counts"))

## Exported data

.__C__SummarizedExperiment: classRepresentation (S4[1])
.__T__txi:bcbioRnaseq: environment (environment[1])
.__T__txi<-:bcbioRnaseq: environment (environment[1])
