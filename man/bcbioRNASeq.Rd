% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/deprecated.R
\docType{class}
\name{bcbioRNASeq}
\alias{bcbioRNASeq}
\alias{bcbioRNASeq-class}
\alias{loadRNASeq}
\title{\code{bcbioRNASeq} Object and Constructor}
\usage{
bcbioRNASeq(uploadDir, level = c("genes", "transcripts"),
  caller = c("salmon", "kallisto", "sailfish"), organism, samples = NULL,
  censorSamples = NULL, sampleMetadataFile = NULL,
  interestingGroups = "sampleName", ensemblRelease = NULL,
  genomeBuild = NULL, transgeneNames = NULL, spikeNames = NULL,
  gffFile = NULL, transformationLimit = 50L, ...)
}
\arguments{
\item{uploadDir}{Path to final upload directory. This path is set when
running "\code{bcbio_nextgen -w template}".}

\item{level}{Import counts as "\code{genes}" (default) or "\code{transcripts}".}

\item{caller}{Expression caller. Supports "\code{salmon}" (default), "\code{kallisto}",
or "\code{sailfish}".}

\item{organism}{Organism name. Use the full latin name (e.g.
"Homo sapiens"), since this will be input downstream to
AnnotationHub and ensembldb, unless \code{gffFile} is set. If set \code{NULL}
(\emph{advanced use; not recommended}), the function call will skip loading
gene/transcript-level annotations into \code{rowRanges()}. This can be useful
for poorly annotation genomes or experiments involving multiple genomes.}

\item{samples}{\emph{Optional.} Specify a subset of samples to load. The names
must match the \code{description} specified in the bcbio YAML metadata. If a
\code{sampleMetadataFile} is provided, that will take priority for sample
selection. Typically this can be left unset.}

\item{censorSamples}{\emph{Optional.} Samples to exclude from the analysis.}

\item{sampleMetadataFile}{\emph{Optional.} Custom metadata file containing
sample information. Otherwise defaults to sample metadata saved in the YAML
file. Remote URLs are supported. Typically this can be left unset.}

\item{interestingGroups}{Character vector denoting groups of interest that
define the samples. If left unset, defaults to \code{sampleName}.}

\item{ensemblRelease}{\emph{Optional.} Ensembl release version. If unset,
defaults to current release, and does not typically need to be
user-defined. Passed to AnnotationHub for \code{EnsDb} annotation matching,
unless \code{gffFile} is set.}

\item{genomeBuild}{\emph{Optional.} Ensembl genome build name (e.g. "GRCh38").
This will be passed to AnnotationHub for \code{EnsDb} annotation matching,
unless \code{gffFile} is set.}

\item{transgeneNames}{\code{character} vector indicating which \code{\link[=assay]{assay()}} rows
denote transgenes (e.g. EGFP, TDTOMATO).}

\item{spikeNames}{\code{character} vector indicating which \code{\link[=assay]{assay()}} rows denote
spike-in sequences (e.g. ERCCs).}

\item{gffFile}{\emph{Advanced use; not recommended.} By default, we recommend
leaving this \code{NULL} for genomes that are supported on Ensembl. In this
case, the row annotations (\code{\link[=rowRanges]{rowRanges()}}) will be obtained automatically
from Ensembl by passing the \code{organism}, \code{genomeBuild}, and \code{ensemblRelease}
arguments to AnnotationHub and ensembldb. For a genome that is not
supported on Ensembl and/or AnnotationHub, a GFF/GTF (General Feature
Format) file is required. Generally, we recommend using a GTF (GFFv2) file
here over a GFF3 file if possible, although all GFF formats are supported.
The function will internally generate a \code{TxDb} containing
transcript-to-gene mappings and construct a \code{GRanges} object containing the
genomic ranges (\code{\link[=rowRanges]{rowRanges()}}).}

\item{transformationLimit}{Maximum number of samples to calculate
\code{\link[DESeq2:rlog]{DESeq2::rlog()}} and \code{\link[DESeq2:varianceStabilizingTransformation]{DESeq2::varianceStabilizingTransformation()}} matrix.
For large datasets, DESeq2 is slow to apply variance stabilization. In this
case, we recommend loading up the dataset in a high-performance computing
environment. Use \code{Inf} to always apply and \code{-Inf} to always skip.}

\item{...}{Additional arguments, slotted into the \code{\link[=metadata]{metadata()}} accessor.}
}
\value{
\code{bcbioRNASeq}.
}
\description{
\code{bcbioRNASeq} is an S4 class that extends \code{RangedSummarizedExperiment}, and
is designed to store a \href{https://bcbio-nextgen.readthedocs.org}{bcbio} RNA-seq
analysis.
}
\details{
Simply point to the final upload directory generated by
\href{https://bcbio-nextgen.readthedocs.io/}{bcbio}, and this constructor function
will take care of the rest. It automatically imports RNA-seq counts,
metadata, and the program versions used.

This class contains raw read counts and length-scaled
transcripts per million (TPM) generated by \code{\link[tximport:tximport]{tximport::tximport()}}. Counts can
be loaded at gene or transcript level.
}
\note{
\code{bcbioRNASeq} extended \code{SummarizedExperiment} prior to v0.2.0, where we
migrated to \code{RangedSummarizedExperiment}.
}
\section{Metadata}{


The \code{\link[=metadata]{metadata()}} accessor contains:
\itemize{
\item Sample quality control metrics.
\item Ensembl annotations.
\item Server run paths.
\item R session information (e.g. \code{\link[utils:sessionInfo]{utils::sessionInfo()}}).
}
}

\section{DESeq2}{


DESeq2 is run automatically when \code{\link[=bcbioRNASeq]{bcbioRNASeq()}} is called, and variance
stabilized counts are slotted into \code{\link[=assays]{assays()}}. If the number of samples is
bigger than the \code{transformationLimit} argument, \code{rlog} and \code{vst} counts will
not be slotted into \code{assays()}. In this case, we recommend visualization
using \code{\link[=tmm]{tmm()}} counts, which are automatically calculated using edgeR.
}

\section{Remote Data}{


When working in RStudio, we recommend connecting to the bcbio run directory
as a remote connection over
\href{https://github.com/osxfuse/osxfuse/wiki/SSHFS}{sshfs}.
}

\examples{
uploadDir <- system.file("extdata/bcbio", package = "bcbioRNASeq")

# Gene level
x <- bcbioRNASeq(
    uploadDir = uploadDir,
    level = "genes",
    caller = "salmon",
    organism = "Mus musculus",
    ensemblRelease = 87L
)
show(x)
is(x, "RangedSummarizedExperiment")
validObject(x)

# Transcript level
x <- bcbioRNASeq(
    uploadDir = uploadDir,
    level = "transcripts",
    caller = "salmon",
    organism = "Mus musculus",
    ensemblRelease = 87L
)
show(x)
validObject(x)
}
\seealso{
\itemize{
\item \code{\link[SummarizedExperiment:SummarizedExperiment]{SummarizedExperiment::SummarizedExperiment()}}.
\item \code{\link[methods:initialize]{methods::initialize()}}.
\item \code{\link[methods:validObject]{methods::validObject()}}.
\item \code{\link[BiocGenerics:updateObject]{BiocGenerics::updateObject()}}.
\item \code{.S4methods(class = "bcbioRNASeq")}.
}

Other S4 Class Definition: \code{\link{coerce}},
  \code{\link{show}}, \code{\link{subset}},
  \code{\link{updateObject}}
}
\author{
Michael Steinbaugh, Lorena Pantano, Rory Kirchner, Victor Barrera
}
