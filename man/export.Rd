% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-methods.R
\docType{methods}
\name{export}
\alias{export}
\alias{export,DESeqResultsTables-method}
\title{Export}
\usage{
\S4method{export}{DESeqResultsTables}(x, dir = ".", compress = FALSE,
  dropbox = FALSE, rdsToken = NULL)
}
\arguments{
\item{x}{Object.}

\item{dir}{\code{string}. Directory path.}

\item{compress}{\code{boolean}. Apply gzip compression to all files.}

\item{dropbox}{\code{boolean}. Export results to \href{https://dropbox.com}{Dropbox} instead of local
storage. Recommended method by \href{http://bioinformatics.sph.harvard.edu}{HBC} for permanent storage (e.g. \href{https://stemcellcommons.org}{Stem Cell Commons}). When this option is enabled, unique links per file are
generated internally with \code{\link[bcbioBase:copyToDropbox]{bcbioBase::copyToDropbox()}}, which relies on the
\href{https://cran.r-project.org/package=rdrop2}{rdrop2} package. Note that local files are written to \code{\link[base:tempdir]{base::tempdir()}}
when this option is enabled.}

\item{rdsToken}{\code{string} or \code{NULL}. RDS file token to use for Dropbox
authentication. If set \code{NULL} and \code{dropbox = TRUE} then an interactive
prompt will appear requesting authorization.}
}
\value{
Invisible \code{character}. File path(s).
}
\description{
Export data out of R and write to disk.
}
\details{
This is a wrapper for \code{\link[rio:export]{rio::export()}} that adds support for additional S4
classes in Bioconductor.
}
\section{Row names}{



The standard \code{\link[rio:export]{rio::export()}} call will drop rownames when exporting to CSV.
The \code{readr::write_*()} family of functions also never write rownames. This is
a \emph{really poor} default setting for handling genomic data, which often
contain gene identifiers in the rownames. Here we're performing any internal
tibble coercion step to ensure rownames are always moved to a "\code{rowname}"
column in the CSV export.

}

\examples{
data(deseq_small)
x <- DESeqResultsTables(deseq_small)
export(x, dir = "example")
list.files("example")

## Clean up.
unlink("example", recursive = TRUE)
}
\seealso{
\code{\link[rio:export]{rio::export()}}.
}
\author{
Michael Steinbaugh
}
